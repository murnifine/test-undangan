// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Admin {
  id        Int                @id @default(autoincrement())
  email     String             @unique
  name      String
  templates TemplateUndangan[]
}

model User {
  id      Int      @id @default(autoincrement())
  email   String   @unique
  name    String
  Profile Profile?
}

model Profile {
  id             Int    @id @default(autoincrement())
  userId         Int    @unique
  user           User   @relation(fields: [userId], references: [id])
  nama_pria      String
  nama_ayah_pria String
  nama_ibu_pria  String

  nama_wanita      String
  nama_ayah_wanita String
  nama_ibu_wanita  String

  pria_fb         String?
  pria_ig         String?
  pria_tk         String?
  wanita_fb       String?
  wanita_ig       String?
  wanita_tk       String?
  url_foto_pria   String?
  url_foto_wanita String?
  url_foto_utama  String?

  dateTime_resepsi DateTime?

  dateTime_akad_nikah DateTime @default(now())

  alamat_akad_nikah String?
  alamat_resepsi    String?

  photo_moment PhotoMoments[]
  ucapan       Ucapan[]
  template     TemplateUndangan? @relation(fields: [templateId], references: [id])
  templateId   Int?
}

model TemplateUndangan {
  id   Int     @id @default(autoincrement())
  nama String?

  profile Profile[]

  admin   Admin @relation(fields: [adminId], references: [id])
  adminId Int   @unique
}

model PhotoMoments {
  id        Int      @id @default(autoincrement())
  url_foto  String?
  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}

model Ucapan {
  id        Int      @id @default(autoincrement())
  nama      String?
  pesan     String?
  profile   Profile? @relation(fields: [profileId], references: [id])
  profileId Int?
}
